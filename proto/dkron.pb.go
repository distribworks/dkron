// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dkron.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetJobRequest struct {
	JobName              string   `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobRequest) Reset()         { *m = GetJobRequest{} }
func (m *GetJobRequest) String() string { return proto.CompactTextString(m) }
func (*GetJobRequest) ProtoMessage()    {}
func (*GetJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dkron_3b739081e7b8d623, []int{0}
}
func (m *GetJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobRequest.Unmarshal(m, b)
}
func (m *GetJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobRequest.Marshal(b, m, deterministic)
}
func (dst *GetJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobRequest.Merge(dst, src)
}
func (m *GetJobRequest) XXX_Size() int {
	return xxx_messageInfo_GetJobRequest.Size(m)
}
func (m *GetJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobRequest proto.InternalMessageInfo

func (m *GetJobRequest) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

type GetJobResponse struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Timezone             string            `protobuf:"bytes,2,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Schedule             string            `protobuf:"bytes,3,opt,name=schedule,proto3" json:"schedule,omitempty"`
	Owner                string            `protobuf:"bytes,7,opt,name=owner,proto3" json:"owner,omitempty"`
	OwnerEmail           string            `protobuf:"bytes,8,opt,name=owner_email,json=ownerEmail,proto3" json:"owner_email,omitempty"`
	SuccessCount         int32             `protobuf:"varint,9,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	ErrorCount           int32             `protobuf:"varint,10,opt,name=error_count,json=errorCount,proto3" json:"error_count,omitempty"`
	Disabled             bool              `protobuf:"varint,11,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Retries              uint32            `protobuf:"varint,13,opt,name=retries,proto3" json:"retries,omitempty"`
	DependentJobs        []string          `protobuf:"bytes,14,rep,name=dependent_jobs,json=dependentJobs,proto3" json:"dependent_jobs,omitempty"`
	ParentJob            string            `protobuf:"bytes,15,opt,name=parent_job,json=parentJob,proto3" json:"parent_job,omitempty"`
	Concurrency          string            `protobuf:"bytes,16,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	Executor             string            `protobuf:"bytes,17,opt,name=executor,proto3" json:"executor,omitempty"`
	ExecutorConfig       map[string]string `protobuf:"bytes,18,rep,name=executor_config,json=executorConfig,proto3" json:"executor_config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Status               string            `protobuf:"bytes,19,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetJobResponse) Reset()         { *m = GetJobResponse{} }
func (m *GetJobResponse) String() string { return proto.CompactTextString(m) }
func (*GetJobResponse) ProtoMessage()    {}
func (*GetJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dkron_3b739081e7b8d623, []int{1}
}
func (m *GetJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobResponse.Unmarshal(m, b)
}
func (m *GetJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobResponse.Marshal(b, m, deterministic)
}
func (dst *GetJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobResponse.Merge(dst, src)
}
func (m *GetJobResponse) XXX_Size() int {
	return xxx_messageInfo_GetJobResponse.Size(m)
}
func (m *GetJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobResponse proto.InternalMessageInfo

func (m *GetJobResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetJobResponse) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *GetJobResponse) GetSchedule() string {
	if m != nil {
		return m.Schedule
	}
	return ""
}

func (m *GetJobResponse) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *GetJobResponse) GetOwnerEmail() string {
	if m != nil {
		return m.OwnerEmail
	}
	return ""
}

func (m *GetJobResponse) GetSuccessCount() int32 {
	if m != nil {
		return m.SuccessCount
	}
	return 0
}

func (m *GetJobResponse) GetErrorCount() int32 {
	if m != nil {
		return m.ErrorCount
	}
	return 0
}

func (m *GetJobResponse) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func (m *GetJobResponse) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *GetJobResponse) GetRetries() uint32 {
	if m != nil {
		return m.Retries
	}
	return 0
}

func (m *GetJobResponse) GetDependentJobs() []string {
	if m != nil {
		return m.DependentJobs
	}
	return nil
}

func (m *GetJobResponse) GetParentJob() string {
	if m != nil {
		return m.ParentJob
	}
	return ""
}

func (m *GetJobResponse) GetConcurrency() string {
	if m != nil {
		return m.Concurrency
	}
	return ""
}

func (m *GetJobResponse) GetExecutor() string {
	if m != nil {
		return m.Executor
	}
	return ""
}

func (m *GetJobResponse) GetExecutorConfig() map[string]string {
	if m != nil {
		return m.ExecutorConfig
	}
	return nil
}

func (m *GetJobResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type ExecutionDoneRequest struct {
	JobName              string               `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	Success              bool                 `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Output               []byte               `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	NodeName             string               `protobuf:"bytes,4,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	Group                int64                `protobuf:"varint,5,opt,name=group,proto3" json:"group,omitempty"`
	Attempt              uint32               `protobuf:"varint,6,opt,name=attempt,proto3" json:"attempt,omitempty"`
	StartedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	FinishedAt           *timestamp.Timestamp `protobuf:"bytes,8,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ExecutionDoneRequest) Reset()         { *m = ExecutionDoneRequest{} }
func (m *ExecutionDoneRequest) String() string { return proto.CompactTextString(m) }
func (*ExecutionDoneRequest) ProtoMessage()    {}
func (*ExecutionDoneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dkron_3b739081e7b8d623, []int{2}
}
func (m *ExecutionDoneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionDoneRequest.Unmarshal(m, b)
}
func (m *ExecutionDoneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionDoneRequest.Marshal(b, m, deterministic)
}
func (dst *ExecutionDoneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionDoneRequest.Merge(dst, src)
}
func (m *ExecutionDoneRequest) XXX_Size() int {
	return xxx_messageInfo_ExecutionDoneRequest.Size(m)
}
func (m *ExecutionDoneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionDoneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionDoneRequest proto.InternalMessageInfo

func (m *ExecutionDoneRequest) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

func (m *ExecutionDoneRequest) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ExecutionDoneRequest) GetOutput() []byte {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *ExecutionDoneRequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *ExecutionDoneRequest) GetGroup() int64 {
	if m != nil {
		return m.Group
	}
	return 0
}

func (m *ExecutionDoneRequest) GetAttempt() uint32 {
	if m != nil {
		return m.Attempt
	}
	return 0
}

func (m *ExecutionDoneRequest) GetStartedAt() *timestamp.Timestamp {
	if m != nil {
		return m.StartedAt
	}
	return nil
}

func (m *ExecutionDoneRequest) GetFinishedAt() *timestamp.Timestamp {
	if m != nil {
		return m.FinishedAt
	}
	return nil
}

type ExecutionDoneResponse struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecutionDoneResponse) Reset()         { *m = ExecutionDoneResponse{} }
func (m *ExecutionDoneResponse) String() string { return proto.CompactTextString(m) }
func (*ExecutionDoneResponse) ProtoMessage()    {}
func (*ExecutionDoneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dkron_3b739081e7b8d623, []int{3}
}
func (m *ExecutionDoneResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionDoneResponse.Unmarshal(m, b)
}
func (m *ExecutionDoneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionDoneResponse.Marshal(b, m, deterministic)
}
func (dst *ExecutionDoneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionDoneResponse.Merge(dst, src)
}
func (m *ExecutionDoneResponse) XXX_Size() int {
	return xxx_messageInfo_ExecutionDoneResponse.Size(m)
}
func (m *ExecutionDoneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionDoneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionDoneResponse proto.InternalMessageInfo

func (m *ExecutionDoneResponse) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *ExecutionDoneResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*GetJobRequest)(nil), "proto.GetJobRequest")
	proto.RegisterType((*GetJobResponse)(nil), "proto.GetJobResponse")
	proto.RegisterMapType((map[string]string)(nil), "proto.GetJobResponse.ExecutorConfigEntry")
	proto.RegisterMapType((map[string]string)(nil), "proto.GetJobResponse.TagsEntry")
	proto.RegisterType((*ExecutionDoneRequest)(nil), "proto.ExecutionDoneRequest")
	proto.RegisterType((*ExecutionDoneResponse)(nil), "proto.ExecutionDoneResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DkronClient is the client API for Dkron service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DkronClient interface {
	GetJob(ctx context.Context, in *GetJobRequest, opts ...grpc.CallOption) (*GetJobResponse, error)
	ExecutionDone(ctx context.Context, in *ExecutionDoneRequest, opts ...grpc.CallOption) (*ExecutionDoneResponse, error)
}

type dkronClient struct {
	cc *grpc.ClientConn
}

func NewDkronClient(cc *grpc.ClientConn) DkronClient {
	return &dkronClient{cc}
}

func (c *dkronClient) GetJob(ctx context.Context, in *GetJobRequest, opts ...grpc.CallOption) (*GetJobResponse, error) {
	out := new(GetJobResponse)
	err := c.cc.Invoke(ctx, "/proto.Dkron/GetJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dkronClient) ExecutionDone(ctx context.Context, in *ExecutionDoneRequest, opts ...grpc.CallOption) (*ExecutionDoneResponse, error) {
	out := new(ExecutionDoneResponse)
	err := c.cc.Invoke(ctx, "/proto.Dkron/ExecutionDone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DkronServer is the server API for Dkron service.
type DkronServer interface {
	GetJob(context.Context, *GetJobRequest) (*GetJobResponse, error)
	ExecutionDone(context.Context, *ExecutionDoneRequest) (*ExecutionDoneResponse, error)
}

func RegisterDkronServer(s *grpc.Server, srv DkronServer) {
	s.RegisterService(&_Dkron_serviceDesc, srv)
}

func _Dkron_GetJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DkronServer).GetJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dkron/GetJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DkronServer).GetJob(ctx, req.(*GetJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dkron_ExecutionDone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecutionDoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DkronServer).ExecutionDone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Dkron/ExecutionDone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DkronServer).ExecutionDone(ctx, req.(*ExecutionDoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dkron_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Dkron",
	HandlerType: (*DkronServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetJob",
			Handler:    _Dkron_GetJob_Handler,
		},
		{
			MethodName: "ExecutionDone",
			Handler:    _Dkron_ExecutionDone_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dkron.proto",
}

func init() { proto.RegisterFile("dkron.proto", fileDescriptor_dkron_3b739081e7b8d623) }

var fileDescriptor_dkron_3b739081e7b8d623 = []byte{
	// 644 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x4d, 0x6f, 0xdb, 0x38,
	0x10, 0x85, 0xe2, 0xd8, 0xb1, 0x47, 0xb6, 0x93, 0x65, 0x9c, 0x05, 0x57, 0xd9, 0x22, 0x82, 0x8b,
	0x02, 0x6a, 0x0f, 0x0e, 0x90, 0xa0, 0xe8, 0xd7, 0x29, 0x48, 0x8c, 0x02, 0x3e, 0xf4, 0x20, 0xe4,
	0x6e, 0x50, 0xd2, 0xd8, 0x51, 0x62, 0x91, 0x2a, 0x49, 0xb5, 0x75, 0x7f, 0x42, 0x7f, 0x49, 0x8f,
	0xfd, 0x89, 0x05, 0x49, 0xc9, 0x4d, 0x02, 0x03, 0x41, 0x4f, 0x9e, 0xf7, 0xe6, 0x69, 0xc8, 0x19,
	0xbe, 0x31, 0xf8, 0xd9, 0x9d, 0x14, 0x7c, 0x52, 0x4a, 0xa1, 0x05, 0x69, 0xdb, 0x9f, 0xe0, 0x64,
	0x29, 0xc4, 0x72, 0x85, 0xa7, 0x16, 0x25, 0xd5, 0xe2, 0x54, 0xe7, 0x05, 0x2a, 0xcd, 0x8a, 0xd2,
	0xe9, 0xc6, 0xaf, 0x60, 0xf0, 0x11, 0xf5, 0x4c, 0x24, 0x31, 0x7e, 0xae, 0x50, 0x69, 0xf2, 0x1f,
	0x74, 0x6f, 0x45, 0x32, 0xe7, 0xac, 0x40, 0xea, 0x85, 0x5e, 0xd4, 0x8b, 0xf7, 0x6e, 0x45, 0xf2,
	0x89, 0x15, 0x38, 0xfe, 0xd5, 0x86, 0x61, 0x23, 0x56, 0xa5, 0xe0, 0x0a, 0x09, 0x81, 0xdd, 0x7b,
	0x4a, 0x1b, 0x93, 0x00, 0xba, 0xe6, 0x94, 0xef, 0x82, 0x23, 0xdd, 0xb1, 0xfc, 0x06, 0x9b, 0x9c,
	0x4a, 0x6f, 0x30, 0xab, 0x56, 0x48, 0x5b, 0x2e, 0xd7, 0x60, 0x32, 0x82, 0xb6, 0xf8, 0xca, 0x51,
	0xd2, 0x3d, 0x9b, 0x70, 0x80, 0x9c, 0x80, 0x6f, 0x83, 0x39, 0x16, 0x2c, 0x5f, 0xd1, 0xae, 0xcd,
	0x81, 0xa5, 0xa6, 0x86, 0x21, 0xcf, 0x61, 0xa0, 0xaa, 0x34, 0x45, 0xa5, 0xe6, 0xa9, 0xa8, 0xb8,
	0xa6, 0xbd, 0xd0, 0x8b, 0xda, 0x71, 0xbf, 0x26, 0x2f, 0x0d, 0x67, 0xaa, 0xa0, 0x94, 0x42, 0xd6,
	0x12, 0xb0, 0x12, 0xb0, 0x94, 0x13, 0x04, 0xd0, 0xcd, 0x72, 0xc5, 0x92, 0x15, 0x66, 0xd4, 0x0f,
	0xbd, 0xa8, 0x1b, 0x6f, 0x30, 0x39, 0x87, 0x5d, 0xcd, 0x96, 0x8a, 0xf6, 0xc3, 0x56, 0xe4, 0x9f,
	0x9d, 0xb8, 0xc9, 0x4d, 0x1e, 0x4e, 0x62, 0x72, 0xcd, 0x96, 0x6a, 0xca, 0xb5, 0x5c, 0xc7, 0x56,
	0x4c, 0x28, 0xec, 0x49, 0xd4, 0x32, 0x47, 0x45, 0x07, 0xa1, 0x17, 0x0d, 0xe2, 0x06, 0x92, 0x17,
	0x30, 0xcc, 0xb0, 0x44, 0x9e, 0x21, 0xd7, 0xf3, 0x5b, 0x91, 0x28, 0x3a, 0x0c, 0x5b, 0x51, 0x2f,
	0x1e, 0x6c, 0xd8, 0x99, 0x48, 0x14, 0x79, 0x06, 0x50, 0x32, 0x59, 0x6b, 0xe8, 0xbe, 0xed, 0xbb,
	0xe7, 0x98, 0x99, 0x48, 0x48, 0x08, 0x7e, 0x2a, 0x78, 0x5a, 0x49, 0x89, 0x3c, 0x5d, 0xd3, 0x03,
	0x9b, 0xbf, 0x4f, 0x99, 0x96, 0xf0, 0x1b, 0xa6, 0x95, 0x16, 0x92, 0xfe, 0xe3, 0x66, 0xdd, 0x60,
	0x12, 0xc3, 0x7e, 0x13, 0xcf, 0x53, 0xc1, 0x17, 0xf9, 0x92, 0x12, 0xdb, 0xdd, 0xcb, 0xed, 0xdd,
	0x4d, 0x6b, 0xf1, 0xa5, 0xd5, 0xba, 0x3e, 0x87, 0xf8, 0x80, 0x24, 0xff, 0x42, 0x47, 0x69, 0xa6,
	0x2b, 0x45, 0x0f, 0xed, 0x69, 0x35, 0x0a, 0xde, 0x40, 0x6f, 0x33, 0x1c, 0x72, 0x00, 0xad, 0x3b,
	0x5c, 0xd7, 0x7e, 0x31, 0xa1, 0x79, 0xf6, 0x2f, 0x6c, 0x55, 0x35, 0x5e, 0x71, 0xe0, 0xfd, 0xce,
	0x5b, 0x2f, 0xb8, 0x80, 0xc3, 0x2d, 0xe7, 0xfe, 0x4d, 0x89, 0xf1, 0xcf, 0x1d, 0x18, 0xb9, 0x1a,
	0xb9, 0xe0, 0x57, 0x82, 0xe3, 0xd3, 0x36, 0x37, 0x2f, 0x57, 0x7b, 0xc7, 0xd6, 0xeb, 0xc6, 0x0d,
	0x34, 0x1d, 0x8a, 0x4a, 0x97, 0x95, 0xb6, 0xde, 0xed, 0xc7, 0x35, 0x22, 0xc7, 0xd0, 0xe3, 0x22,
	0x43, 0x57, 0x6d, 0xd7, 0x8d, 0xda, 0x10, 0xb6, 0xdc, 0x08, 0xda, 0x4b, 0x29, 0xaa, 0x92, 0xb6,
	0x43, 0x2f, 0x6a, 0xc5, 0x0e, 0x98, 0x43, 0x98, 0xd6, 0x58, 0x94, 0x9a, 0x76, 0x9c, 0x3d, 0x6a,
	0x48, 0xde, 0x01, 0x28, 0xcd, 0xa4, 0xc6, 0x6c, 0xce, 0xb4, 0xdd, 0x05, 0xff, 0x2c, 0x98, 0xb8,
	0x3d, 0x9e, 0x34, 0x7b, 0x3c, 0xb9, 0x6e, 0xf6, 0x38, 0xee, 0xd5, 0xea, 0x0b, 0x4d, 0x3e, 0x80,
	0xbf, 0xc8, 0x79, 0xae, 0x6e, 0xdc, 0xb7, 0xdd, 0x27, 0xbf, 0x85, 0x46, 0x7e, 0xa1, 0xc7, 0x53,
	0x38, 0x7a, 0x34, 0xa9, 0x3f, 0x3b, 0xbe, 0x90, 0xa2, 0x68, 0x76, 0xdc, 0xc4, 0xe6, 0xfa, 0x25,
	0x5b, 0xaf, 0x04, 0xcb, 0xec, 0x8c, 0xfa, 0x71, 0x03, 0xcf, 0x7e, 0x78, 0xd0, 0xbe, 0x32, 0x7f,
	0x44, 0xe4, 0x35, 0x74, 0x9c, 0x8b, 0xc8, 0xe8, 0x91, 0xa9, 0xec, 0x13, 0x04, 0x47, 0x5b, 0xad,
	0x46, 0x66, 0x30, 0x78, 0x70, 0x0f, 0x72, 0x5c, 0xeb, 0xb6, 0xbd, 0x63, 0xf0, 0xff, 0xf6, 0xa4,
	0xab, 0x95, 0x74, 0x6c, 0xf2, 0xfc, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x92, 0x66, 0x1c, 0x16,
	0x1b, 0x05, 0x00, 0x00,
}
