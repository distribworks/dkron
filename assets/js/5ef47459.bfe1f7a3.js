"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3194],{80775:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>a});var s=i(85893),r=i(11151);const t={title:"Cron Specification",weight:20},d="Cron Expression Format",l={id:"usage/cron-spec",title:"Cron Specification",description:"Dkron uses a powerful cron expression format to define job schedules. This guide explains the syntax in detail with practical examples.",source:"@site/docs/usage/cron-spec.md",sourceDirName:"usage",slug:"/usage/cron-spec",permalink:"/docs/usage/cron-spec",draft:!1,unlisted:!1,editUrl:"https://github.com/distribworks/dkron/tree/main/website/docs/docs/usage/cron-spec.md",tags:[],version:"current",frontMatter:{title:"Cron Specification",weight:20},sidebar:"tutorialSidebar",previous:{title:"Concurrency",permalink:"/docs/usage/concurrency"},next:{title:"Cronitor Integration",permalink:"/docs/usage/cronitor"}},c={},a=[{value:"Basic Format",id:"basic-format",level:2},{value:"Special Characters",id:"special-characters",level:2},{value:"Asterisk ( * )",id:"asterisk---",level:3},{value:"Slash ( / )",id:"slash---",level:3},{value:"Comma ( , )",id:"comma---",level:3},{value:"Hyphen ( - )",id:"hyphen----",level:3},{value:"Question mark ( ? )",id:"question-mark---",level:3},{value:"Tilde ( ~ )",id:"tilde---",level:3},{value:"Predefined Schedules",id:"predefined-schedules",level:2},{value:"Fixed Intervals",id:"fixed-intervals",level:2},{value:"One-time Execution",id:"one-time-execution",level:2},{value:"Time Zones",id:"time-zones",level:2},{value:"Practical Examples",id:"practical-examples",level:2},{value:"Every weekday at 8 AM",id:"every-weekday-at-8-am",level:3},{value:"Every 10 minutes during business hours",id:"every-10-minutes-during-business-hours",level:3},{value:"First day of every month at 3 AM",id:"first-day-of-every-month-at-3-am",level:3},{value:"Every 15 minutes with even load distribution",id:"every-15-minutes-with-even-load-distribution",level:3},{value:"Every quarter (Jan, Apr, Jul, Oct) on the first day at midnight",id:"every-quarter-jan-apr-jul-oct-on-the-first-day-at-midnight",level:3},{value:"Every weekend at 10 PM",id:"every-weekend-at-10-pm",level:3},{value:"Every day at 8 AM New York time",id:"every-day-at-8-am-new-york-time",level:3},{value:"Best Practices",id:"best-practices",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"cron-expression-format",children:"Cron Expression Format"})}),"\n",(0,s.jsx)(n.p,{children:"Dkron uses a powerful cron expression format to define job schedules. This guide explains the syntax in detail with practical examples."}),"\n",(0,s.jsx)(n.h2,{id:"basic-format",children:"Basic Format"}),"\n",(0,s.jsx)(n.p,{children:"A cron expression consists of 6 space-separated fields:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field name"}),(0,s.jsx)(n.th,{children:"Mandatory?"}),(0,s.jsx)(n.th,{children:"Allowed values"}),(0,s.jsx)(n.th,{children:"Allowed special characters"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Seconds"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"0-59"}),(0,s.jsx)(n.td,{children:"* / , - ~"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Minutes"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"0-59"}),(0,s.jsx)(n.td,{children:"* / , - ~"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Hours"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"0-23"}),(0,s.jsx)(n.td,{children:"* / , - ~"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Day of month"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"1-31"}),(0,s.jsx)(n.td,{children:"* / , - ? ~"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Month"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"1-12 or JAN-DEC"}),(0,s.jsx)(n.td,{children:"* / , - ~"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Day of week"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"0-6 or SUN-SAT"}),(0,s.jsx)(n.td,{children:"* / , - ? ~"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:'Note: Month and Day-of-week field values are case insensitive. "SUN", "Sun", and "sun" are equally accepted.'}),"\n",(0,s.jsx)(n.h2,{id:"special-characters",children:"Special Characters"}),"\n",(0,s.jsx)(n.h3,{id:"asterisk---",children:"Asterisk ( * )"}),"\n",(0,s.jsx)(n.p,{children:"The asterisk indicates that the cron expression will match for all values of the field."}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"* * * * * *"})," runs every second of every minute of every hour, every day."]}),"\n",(0,s.jsx)(n.h3,{id:"slash---",children:"Slash ( / )"}),"\n",(0,s.jsx)(n.p,{children:"Slashes define increments within ranges."}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"0 */15 * * * *"})," runs every 15 minutes (at 0:00, 0:15, 0:30, 0:45)."]}),"\n",(0,s.jsx)(n.h3,{id:"comma---",children:"Comma ( , )"}),"\n",(0,s.jsx)(n.p,{children:"Commas are used to separate items in a list."}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"0 0 0 * * MON,WED,FRI"})," runs at midnight on Mondays, Wednesdays, and Fridays."]}),"\n",(0,s.jsx)(n.h3,{id:"hyphen----",children:"Hyphen ( - )"}),"\n",(0,s.jsx)(n.p,{children:"Hyphens define ranges."}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"0 0 9-17 * * *"})," runs every hour from 9 AM to 5 PM."]}),"\n",(0,s.jsx)(n.h3,{id:"question-mark---",children:"Question mark ( ? )"}),"\n",(0,s.jsx)(n.p,{children:"Question mark may be used instead of '*' for leaving either day-of-month or day-of-week blank to avoid conflicts."}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"0 0 0 1 * ?"})," runs at midnight on the first day of each month, regardless of the day of the week."]}),"\n",(0,s.jsx)(n.h3,{id:"tilde---",children:"Tilde ( ~ )"}),"\n",(0,s.jsx)(n.p,{children:"Tilde is replaced by a deterministic numeric value based on the job name, providing an even distribution of load."}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"0 ~ * * * *"})," distributes jobs evenly across different minutes within the hour."]}),"\n",(0,s.jsx)(n.h2,{id:"predefined-schedules",children:"Predefined Schedules"}),"\n",(0,s.jsx)(n.p,{children:"For convenience, Dkron supports several predefined schedules:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Entry"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Equivalent To"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@yearly (or @annually)"}),(0,s.jsx)(n.td,{children:"Run once a year at midnight on January 1"}),(0,s.jsx)(n.td,{children:"0 0 0 1 1 *"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@monthly"}),(0,s.jsx)(n.td,{children:"Run once a month at midnight on first day"}),(0,s.jsx)(n.td,{children:"0 0 0 1 * *"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@weekly"}),(0,s.jsx)(n.td,{children:"Run once a week at midnight on Sunday"}),(0,s.jsx)(n.td,{children:"0 0 0 * * 0"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@daily (or @midnight)"}),(0,s.jsx)(n.td,{children:"Run once a day at midnight"}),(0,s.jsx)(n.td,{children:"0 0 0 * * *"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@hourly"}),(0,s.jsx)(n.td,{children:"Run once an hour at the beginning of hour"}),(0,s.jsx)(n.td,{children:"0 0 * * * *"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@minutely"}),(0,s.jsx)(n.td,{children:"Run once a minute at the beginning"}),(0,s.jsx)(n.td,{children:"0 * * * * *"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@manually"}),(0,s.jsx)(n.td,{children:"Never runs automatically (manual triggers)"}),(0,s.jsx)(n.td,{children:"N/A"})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"@daily"})," is equivalent to ",(0,s.jsx)(n.code,{children:"0 0 0 * * *"})]}),"\n",(0,s.jsx)(n.h2,{id:"fixed-intervals",children:"Fixed Intervals"}),"\n",(0,s.jsx)(n.p,{children:"You can schedule jobs to execute at fixed intervals using:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"@every <duration>\n"})}),"\n",(0,s.jsxs)(n.p,{children:['Where "duration" is a string accepted by ',(0,s.jsx)(n.a,{href:"http://golang.org/pkg/time/#ParseDuration",children:"time.ParseDuration"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"@every 1h30m10s"})," runs every 1 hour, 30 minutes, and 10 seconds."]}),"\n",(0,s.jsx)(n.p,{children:"Note: The interval does not account for job runtime. For example, if a job takes 3 minutes to run, and it is scheduled to run every 5 minutes, it will have only 2 minutes of idle time between each run."}),"\n",(0,s.jsx)(n.h2,{id:"one-time-execution",children:"One-time Execution"}),"\n",(0,s.jsx)(n.p,{children:"To schedule a job to be executed just once at a specific time:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"@at <datetime>\n"})}),"\n",(0,s.jsxs)(n.p,{children:['Where "datetime" is a string in ',(0,s.jsx)(n.a,{href:"https://golang.org/pkg/time/#Parse",children:"RFC3339 format"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Example: ",(0,s.jsx)(n.code,{children:"@at 2023-12-31T23:59:00Z"})," will run the job once on December 31, 2023 at 11:59 PM UTC."]}),"\n",(0,s.jsx)(n.h2,{id:"time-zones",children:"Time Zones"}),"\n",(0,s.jsxs)(n.p,{children:["Dkron supports scheduling jobs in specific time zones by specifying the ",(0,s.jsx)(n.code,{children:"timezone"})," parameter in a job definition."]}),"\n",(0,s.jsx)(n.p,{children:"If no time zone is specified:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"All scheduling is done in the server's local time zone"}),"\n",(0,s.jsx)(n.li,{children:"Jobs scheduled during daylight-savings leap-ahead transitions will not be run"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["When a ",(0,s.jsx)(n.code,{children:"timezone"})," is specified, the job will be scheduled in the specified time zone, correctly handling daylight saving time transitions."]}),"\n",(0,s.jsx)(n.p,{children:"Example timezone values:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'"America/New_York"'}),"\n",(0,s.jsx)(n.li,{children:'"Europe/London"'}),"\n",(0,s.jsx)(n.li,{children:'"Asia/Tokyo"'}),"\n",(0,s.jsx)(n.li,{children:'"UTC"'}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"practical-examples",children:"Practical Examples"}),"\n",(0,s.jsx)(n.p,{children:"Here are some common scheduling patterns with explanations:"}),"\n",(0,s.jsx)(n.h3,{id:"every-weekday-at-8-am",children:"Every weekday at 8 AM"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"0 0 8 * * 1-5\n"})}),"\n",(0,s.jsx)(n.p,{children:"This runs at 8:00 AM Monday through Friday."}),"\n",(0,s.jsx)(n.h3,{id:"every-10-minutes-during-business-hours",children:"Every 10 minutes during business hours"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"0 */10 9-17 * * 1-5\n"})}),"\n",(0,s.jsx)(n.p,{children:"This runs every 10 minutes from 9 AM to 5 PM, Monday through Friday."}),"\n",(0,s.jsx)(n.h3,{id:"first-day-of-every-month-at-3-am",children:"First day of every month at 3 AM"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"0 0 3 1 * *\n"})}),"\n",(0,s.jsx)(n.p,{children:"This runs at 3:00 AM on the first day of each month."}),"\n",(0,s.jsx)(n.h3,{id:"every-15-minutes-with-even-load-distribution",children:"Every 15 minutes with even load distribution"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"0 ~/15 * * * *\n"})}),"\n",(0,s.jsx)(n.p,{children:"This distributes jobs evenly across the hour in 15-minute intervals, with the exact minute determined by the job name."}),"\n",(0,s.jsx)(n.h3,{id:"every-quarter-jan-apr-jul-oct-on-the-first-day-at-midnight",children:"Every quarter (Jan, Apr, Jul, Oct) on the first day at midnight"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"0 0 0 1 1,4,7,10 *\n"})}),"\n",(0,s.jsx)(n.p,{children:"This runs at midnight on the first day of January, April, July, and October."}),"\n",(0,s.jsx)(n.h3,{id:"every-weekend-at-10-pm",children:"Every weekend at 10 PM"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"0 0 22 * * 0,6\n"})}),"\n",(0,s.jsx)(n.p,{children:"This runs at 10:00 PM on Saturdays and Sundays."}),"\n",(0,s.jsx)(n.h3,{id:"every-day-at-8-am-new-york-time",children:"Every day at 8 AM New York time"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"0 0 8 * * *\n"})}),"\n",(0,s.jsxs)(n.p,{children:["With ",(0,s.jsx)(n.code,{children:"timezone"}),' parameter set to "America/New_York" in the job configuration.']}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Avoid Running Too Frequently"}),": Consider resource usage when scheduling frequent jobs. Running jobs every few seconds can put unnecessary load on your system."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Use Even Load Distribution"}),": For jobs that don't need to run at an exact time, use the tilde (~) character to distribute load evenly."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Consider Time Zones Carefully"}),": Be explicit about time zones in distributed systems to avoid confusion, especially if your servers are in different locations."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Avoid Overlapping Executions"}),": For long-running jobs, ensure the schedule interval is longer than the expected execution time, or enable concurrency controls in the job configuration."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Use Descriptive Job Names"}),": With the tilde (~) feature, job names influence scheduling, so use consistent naming conventions."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Test Complex Expressions"}),": Use tools like ",(0,s.jsx)(n.a,{href:"https://crontab.guru/",children:"crontab.guru"})," to validate your cron expressions (note: these tools typically use 5-field format, while Dkron uses 6 fields with seconds)."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Document Job Schedules"}),": Maintain documentation about why jobs are scheduled at specific times to help with maintenance and troubleshooting."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>d});var s=i(67294);const r={},t=s.createContext(r);function d(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);