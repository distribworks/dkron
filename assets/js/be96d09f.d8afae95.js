"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[988],{74506:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var a=t(85893),n=t(11151);const o={},r="Kafka Executor",i={id:"usage/executors/kafka",title:"Kafka Executor",description:"A basic Kafka executor that produces a message on a Kafka broker.",source:"@site/docs/usage/executors/kafka.md",sourceDirName:"usage/executors",slug:"/usage/executors/kafka",permalink:"/docs/usage/executors/kafka",draft:!1,unlisted:!1,editUrl:"https://github.com/distribworks/dkron/tree/main/website/docs/docs/usage/executors/kafka.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"HTTP Executor",permalink:"/docs/usage/executors/http"},next:{title:"NATS Executor",permalink:"/docs/usage/executors/nats"}},c={},u=[{value:"Configuration",id:"configuration",level:2}];function d(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"kafka-executor",children:"Kafka Executor"})}),"\n",(0,a.jsx)(s.p,{children:"A basic Kafka executor that produces a message on a Kafka broker."}),"\n",(0,a.jsx)(s.h2,{id:"configuration",children:"Configuration"}),"\n",(0,a.jsx)(s.p,{children:"Params:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:'brokerAddress:          Comma separated string containing "IP:port" of the brokers\nkey:                    The key of the message to produce\nmessage:                The body of the message to produce\ntopic:                  The Kafka topic for this message\ntlsEnable:              Enables TLS if set to true. Optional\ntlsInsecureSkipVerify:  Disables verification of the remote SSL certificate\'s validity if set to true. Optional\nsaslUsername:           The SASL username for authentication. If set, saslPassword and saslMechanism must also be provided.\nsaslPassword:           The SASL password for authentication. If set, saslUsername and saslMechanism must also be provided.\nsaslMechanism:          The SASL SCRAM mechanism to use, either "sha256" or "sha512". This is required if both saslUsername and saslPassword are provided.\ndebug:                  Turns on debugging output if not empty\n'})}),"\n",(0,a.jsx)(s.p,{children:"Example:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-json",children:'{\n  "executor": "kafka",\n  "executor_config": {\n    "brokerAddress": "localhost:9092,another.host:9092",\n    "key": "My key",\n    "message": "My message",\n    "topic": "my_topic"\n  }\n}\n'})})]})}function l(e={}){const{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},11151:(e,s,t)=>{t.d(s,{Z:()=>i,a:()=>r});var a=t(67294);const n={},o=a.createContext(n);function r(e){const s=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(o.Provider,{value:s},e.children)}}}]);