"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6516],{69584:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>a});var o=t(17624),r=t(4552);const s={title:"Quick start",weight:10},i=void 0,c={id:"pro/quick-start",title:"Quick start",description:"Getting started",source:"@site/versioned_docs/version-v1/pro/quick-start.md",sourceDirName:"pro",slug:"/pro/quick-start",permalink:"/docs/v1/pro/quick-start",draft:!1,unlisted:!1,editUrl:"https://github.com/distribworks/dkron/tree/main/website/docs/versioned_docs/version-v1/pro/quick-start.md",tags:[],version:"v1",frontMatter:{title:"Quick start",weight:10},sidebar:"tutorialSidebar",previous:{title:"Slack processor",permalink:"/docs/v1/pro/processors/slack"},next:{title:"Embedded storage",permalink:"/docs/v1/pro/storage"}},d={},a=[{value:"Getting started",id:"getting-started",level:2},{value:"Starting a single node",id:"starting-a-single-node",level:3}];function l(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.M)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"getting-started",children:"Getting started"}),"\n",(0,o.jsx)(n.p,{children:"Dkron Pro provides a clustering backend store out of the box based on etcd."}),"\n",(0,o.jsxs)(n.p,{children:["To configure the storage a sample ",(0,o.jsx)(n.code,{children:"etcd.conf.yaml"})," file is provided in ",(0,o.jsx)(n.code,{children:"/etc/dkron"})," path. Editing the file, allows to configure several options for the embedded store."]}),"\n",(0,o.jsxs)(n.p,{children:["The location of the store configuration can be set in the command line or in the dkron config file ",(0,o.jsx)(n.code,{children:"/etc/dkron/dkron.yml"})," using ",(0,o.jsx)(n.code,{children:"etcd-config-file-path"})," parameter."]}),"\n",(0,o.jsx)(n.h3,{id:"starting-a-single-node",children:"Starting a single node"}),"\n",(0,o.jsx)(n.p,{children:"Works out of the box, good for non HA installations."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"System service: If no changes are done to the default config files, dkron will start as a service in single mode."}),"\n",(0,o.jsxs)(n.li,{children:["Command line: Running a single node with default config can be done by running: ",(0,o.jsx)(n.code,{children:"dkron agent --server"})]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Check your server is working: ",(0,o.jsx)(n.code,{children:"curl localhost:8080/v1"})]}),"\n",(0,o.jsx)(n.p,{children:"Simple as that, now it is time to add some jobs:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'curl localhost:8080/v1/jobs -XPOST -d \'{\n  "name": "job1",\n  "schedule": "@every 10s",\n  "timezone": "Europe/Berlin",\n  "owner": "Platform Team",\n  "owner_email": "platform@example.com",\n  "disabled": false,\n  "tags": {\n    "dkron_server": "true"\n  },\n  "concurrency": "allow",\n  "executor": "shell",\n  "executor_config": {\n    "command": "date"\n  }\n}\'\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},4552:(e,n,t)=>{t.d(n,{I:()=>c,M:()=>i});var o=t(11504);const r={},s=o.createContext(r);function i(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);