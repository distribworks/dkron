"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2784],{45393:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>d});var r=s(85893),i=s(11151);const t={},o="Concepts",c={id:"usage/concepts",title:"Concepts",description:"Core Concepts",source:"@site/docs/usage/concepts.md",sourceDirName:"usage",slug:"/usage/concepts",permalink:"/docs/usage/concepts",draft:!1,unlisted:!1,editUrl:"https://github.com/distribworks/dkron/tree/main/website/docs/docs/usage/concepts.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Clustering",permalink:"/docs/usage/clustering"},next:{title:"Concurrency",permalink:"/docs/usage/concurrency"}},l={},d=[{value:"Core Concepts",id:"core-concepts",level:2},{value:"Jobs",id:"jobs",level:3},{value:"Schedules",id:"schedules",level:3},{value:"Executors",id:"executors",level:3},{value:"Processors",id:"processors",level:3},{value:"Target Node Selection",id:"target-node-selection",level:3},{value:"Concurrency Control",id:"concurrency-control",level:3},{value:"Job Dependencies",id:"job-dependencies",level:3},{value:"Advanced Concepts",id:"advanced-concepts",level:2},{value:"Distributed Leadership",id:"distributed-leadership",level:3},{value:"Status Codes",id:"status-codes",level:3},{value:"Storage Backend",id:"storage-backend",level:3},{value:"Security Considerations",id:"security-considerations",level:3},{value:"Failure Recovery",id:"failure-recovery",level:3},{value:"Performance Optimization",id:"performance-optimization",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"concepts",children:"Concepts"})}),"\n",(0,r.jsx)(n.h2,{id:"core-concepts",children:"Core Concepts"}),"\n",(0,r.jsx)(n.p,{children:"Dkron's architecture is based on a few key concepts that are essential to understand:"}),"\n",(0,r.jsx)(n.mermaid,{value:'flowchart TD\n    Job["Job Definition"] --\x3e Schedule["Schedule"]\n    Job --\x3e Executor["Executor"]\n    Job --\x3e Processors["Processors"]\n    Job --\x3e TargetNodes["Target Nodes"]\n    \n    Schedule --\x3e Execution["Job Execution"]\n    Executor --\x3e Execution\n    TargetNodes --\x3e Execution\n    \n    Execution --\x3e Status["Execution Status"]\n    Execution --\x3e Output["Execution Output"]\n    \n    Status --\x3e Retry["Retry Logic"]\n    Status --\x3e Dependent["Dependent Jobs"]\n    \n    Output --\x3e Processors'}),"\n",(0,r.jsx)(n.h3,{id:"jobs",children:"Jobs"}),"\n",(0,r.jsx)(n.p,{children:"Jobs are the central entity in Dkron. A job represents a scheduled task with the following properties:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Name"}),(0,r.jsx)(n.td,{children:"Unique identifier for the job"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Schedule"}),(0,r.jsx)(n.td,{children:"When to run (cron expression)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Timezone"}),(0,r.jsx)(n.td,{children:"Reference timezone for the schedule"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Owner"}),(0,r.jsx)(n.td,{children:"Owner name for accountability"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Disabled"}),(0,r.jsx)(n.td,{children:"Flag to disable the job temporarily"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Tags"}),(0,r.jsx)(n.td,{children:"Key-value pairs for node targeting"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Metadata"}),(0,r.jsx)(n.td,{children:"Custom user data for the job"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Concurrency"}),(0,r.jsx)(n.td,{children:"How to handle overlapping executions"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Executor"}),(0,r.jsx)(n.td,{children:"Plugin to execute the job"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Retry"}),(0,r.jsx)(n.td,{children:"Configuration for retrying failed jobs"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Dependent Jobs"}),(0,r.jsx)(n.td,{children:"Jobs that should run after this one"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"schedules",children:"Schedules"}),"\n",(0,r.jsx)(n.p,{children:"Jobs are scheduled using cron expressions. Dkron supports:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Standard cron expressions (",(0,r.jsx)(n.code,{children:"* * * * *"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Predefined schedules (",(0,r.jsx)(n.code,{children:"@hourly"}),", ",(0,r.jsx)(n.code,{children:"@daily"}),", ",(0,r.jsx)(n.code,{children:"@weekly"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Interval notation (",(0,r.jsx)(n.code,{children:"@every 1h30m"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"Custom timezone support"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"executors",children:"Executors"}),"\n",(0,r.jsx)(n.p,{children:"Executors are plugins that perform the actual job execution:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Shell"}),": Executes commands on the target node"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"HTTP"}),": Makes HTTP requests to specified endpoints"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Kafka"}),": Produces messages to Kafka topics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"And more"}),": Custom executors can be implemented"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"processors",children:"Processors"}),"\n",(0,r.jsx)(n.p,{children:"Processors handle the output from job executions:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Log"}),": Records execution output to logs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Files"}),": Saves output to files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Custom"}),": User-implemented processors"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"target-node-selection",children:"Target Node Selection"}),"\n",(0,r.jsx)(n.p,{children:"Jobs can be targeted to specific nodes using:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tags"}),": Key-value pairs assigned to nodes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Count"}),": Number of nodes to run the job on"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Selector"}),": Logic for choosing nodes"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example tag specification:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"tags": {\n  "role": "web",\n  "datacenter": "us-east:2"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"concurrency-control",children:"Concurrency Control"}),"\n",(0,r.jsx)(n.p,{children:"Dkron provides several concurrency options:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Allow"}),": Multiple executions can run simultaneously"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Forbid"}),": New executions are skipped if one is running"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Replace"}),": New executions replace running ones"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"job-dependencies",children:"Job Dependencies"}),"\n",(0,r.jsx)(n.p,{children:"Jobs can depend on other jobs:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Parent jobs must complete successfully before dependent jobs run"}),"\n",(0,r.jsx)(n.li,{children:"Dependencies can form complex workflows"}),"\n",(0,r.jsx)(n.li,{children:"Status codes determine success/failure"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"advanced-concepts",children:"Advanced Concepts"}),"\n",(0,r.jsx)(n.h3,{id:"distributed-leadership",children:"Distributed Leadership"}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart LR\n    subgraph Before\n        Leader1[Node 1\\nLeader] --\x3e Follower1[Node 2\\nFollower]\n        Leader1 --\x3e Follower2[Node 3\\nFollower]\n    end\n    \n    subgraph After[After Node 1 Failure]\n        Follower3[Node 2\\nNew Leader] --\x3e X[Node 1\\nDown]\n        Follower3 --\x3e Follower4[Node 3\\nFollower]\n    end\n    \n    Before --\x3e After"}),"\n",(0,r.jsx)(n.p,{children:"Dkron uses a leader-follower model to ensure high availability:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"One server node is elected as leader"}),"\n",(0,r.jsx)(n.li,{children:"The leader is responsible for scheduling"}),"\n",(0,r.jsx)(n.li,{children:"If the leader fails, a new leader is automatically elected"}),"\n",(0,r.jsx)(n.li,{children:"The cluster continues operating without interruption"}),"\n",(0,r.jsx)(n.li,{children:"When the old leader rejoins, it becomes a follower"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"status-codes",children:"Status Codes"}),"\n",(0,r.jsx)(n.p,{children:"Jobs return status codes that indicate success or failure:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"By default, a zero exit code means success"}),"\n",(0,r.jsx)(n.li,{children:"You can customize which codes are considered successful"}),"\n",(0,r.jsx)(n.li,{children:"Status codes determine whether dependent jobs run"}),"\n",(0,r.jsx)(n.li,{children:"Processors can take different actions based on status codes"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"storage-backend",children:"Storage Backend"}),"\n",(0,r.jsx)(n.p,{children:"Dkron uses an embedded BoltDB database for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Storing job definitions"}),"\n",(0,r.jsx)(n.li,{children:"Recording execution history"}),"\n",(0,r.jsx)(n.li,{children:"Maintaining cluster state"}),"\n",(0,r.jsx)(n.li,{children:"Storing processor output"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"For larger deployments, consider these best practices:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Regular database backups"}),"\n",(0,r.jsx)(n.li,{children:"Monitoring storage usage"}),"\n",(0,r.jsx)(n.li,{children:"Setting appropriate retention policies"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TD\n    User[User] --\x3e|Authentication| API[API Layer]\n    API --\x3e|Authorization| Jobs[Job Execution]\n    API --\x3e|TLS| Agent[Agent Communication]\n    \n    subgraph Security Controls\n        Authentication[Authentication]\n        Authorization[Authorization]\n        TLS[Transport Layer Security]\n        Encryption[Data Encryption]\n    end"}),"\n",(0,r.jsx)(n.p,{children:"Securing your Dkron deployment:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authentication (Pro feature)"}),": Protect the API with authentication"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authorization (Pro feature)"}),": Control who can manage jobs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TLS (Pro feature)"}),": Encrypt communication between nodes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Network Security"}),": Use firewalls to restrict access"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Secrets Management"}),": Carefully handle credentials in jobs"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"failure-recovery",children:"Failure Recovery"}),"\n",(0,r.jsx)(n.p,{children:"Dkron provides multiple mechanisms for handling failures:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Automatic retries"}),": Configure jobs to retry on failure"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dependent jobs with fallbacks"}),": Create contingency plans"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Notifications"}),": Set up alerting for critical failures"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Health checks"}),": Monitor node and cluster status"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,r.jsx)(n.p,{children:"For optimal performance:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Distribute jobs across nodes based on resource requirements"}),"\n",(0,r.jsx)(n.li,{children:"Use appropriate concurrency settings"}),"\n",(0,r.jsx)(n.li,{children:"Monitor execution times and adjust schedules"}),"\n",(0,r.jsx)(n.li,{children:"Consider time zone impacts on scheduling"}),"\n",(0,r.jsx)(n.li,{children:"Optimize command execution with appropriate timeouts"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>c,a:()=>o});var r=s(67294);const i={},t=r.createContext(i);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);