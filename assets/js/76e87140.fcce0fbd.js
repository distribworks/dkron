"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3795],{96606:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>c});var i=r(85893),s=r(11151);const t={title:"Clustering"},l="Clustering",d={id:"usage/clustering",title:"Clustering",description:"High Availability Clustering",source:"@site/docs/usage/clustering.md",sourceDirName:"usage",slug:"/usage/clustering",permalink:"/docs/usage/clustering",draft:!1,unlisted:!1,editUrl:"https://github.com/distribworks/dkron/tree/main/website/docs/docs/usage/clustering.md",tags:[],version:"current",frontMatter:{title:"Clustering"},sidebar:"tutorialSidebar",previous:{title:"Cloud Auto-join",permalink:"/docs/usage/cloud-auto-join"},next:{title:"Concepts",permalink:"/docs/usage/concepts"}},o={},c=[{value:"High Availability Clustering",id:"high-availability-clustering",level:2},{value:"Cluster Formation",id:"cluster-formation",level:2},{value:"Bootstrap Methods",id:"bootstrap-methods",level:3},{value:"Basic Cluster Setup",id:"basic-cluster-setup",level:3},{value:"Key Configuration Parameters",id:"key-configuration-parameters",level:3},{value:"Multi-Datacenter Configuration",id:"multi-datacenter-configuration",level:2},{value:"Deployment Table",id:"deployment-table",level:2},{value:"Fault Tolerance and Recovery",id:"fault-tolerance-and-recovery",level:2},{value:"Leader Failure Recovery",id:"leader-failure-recovery",level:3},{value:"Quorum Requirements",id:"quorum-requirements",level:3},{value:"Node Rejoining",id:"node-rejoining",level:3},{value:"Data Recovery",id:"data-recovery",level:3},{value:"Cluster Maintenance",id:"cluster-maintenance",level:2},{value:"Adding Nodes",id:"adding-nodes",level:3},{value:"Removing Nodes",id:"removing-nodes",level:3},{value:"Upgrading Dkron",id:"upgrading-dkron",level:3},{value:"Monitoring Cluster Health",id:"monitoring-cluster-health",level:3},{value:"Backup and Recovery",id:"backup-and-recovery",level:3}];function a(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"clustering",children:"Clustering"})}),"\n",(0,i.jsx)(n.h2,{id:"high-availability-clustering",children:"High Availability Clustering"}),"\n",(0,i.jsx)(n.p,{children:"Dkron is designed to operate as a cluster of multiple nodes for fault tolerance and high availability. This guide explains how to set up and manage a Dkron cluster."}),"\n",(0,i.jsx)(n.mermaid,{value:"flowchart TD\n    subgraph DC1[Datacenter 1]\n        Server1[Server Node 1\\nLeader] <--\x3e Server2[Server Node 2\\nFollower]\n        Server1 <--\x3e Server3[Server Node 3\\nFollower]\n        Server1 --- Agent1[Agent 1]\n        Server2 --- Agent1\n        Server3 --- Agent1\n    end\n    \n    subgraph DC2[Datacenter 2]\n        Server4[Server Node 4\\nFollower] <--\x3e Server5[Server Node 5\\nFollower]\n        Server4 --- Agent2[Agent 2]\n        Server5 --- Agent2\n    end\n    \n    DC1 <--\x3e DC2"}),"\n",(0,i.jsx)(n.h2,{id:"cluster-formation",children:"Cluster Formation"}),"\n",(0,i.jsx)(n.h3,{id:"bootstrap-methods",children:"Bootstrap Methods"}),"\n",(0,i.jsx)(n.p,{children:"Dkron supports several methods for nodes to discover and join each other:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Static List"}),": Explicitly specify other cluster members"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Auto-join"}),": Automatically discover other nodes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cloud Auto-join"}),": Discover nodes in cloud environments"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"basic-cluster-setup",children:"Basic Cluster Setup"}),"\n",(0,i.jsx)(n.p,{children:"To start a basic 3-node server cluster:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Start the first node"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"dkron agent --server --bootstrap-expect=3 --node-name=node1 --bind=10.0.0.1 --advertise=10.0.0.1\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Start additional server nodes"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"dkron agent --server --bootstrap-expect=3 --node-name=node2 --bind=10.0.0.2 --advertise=10.0.0.2 --join=10.0.0.1\ndkron agent --server --bootstrap-expect=3 --node-name=node3 --bind=10.0.0.3 --advertise=10.0.0.3 --join=10.0.0.1\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Add agent nodes"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"dkron agent --node-name=agent1 --bind=10.0.0.4 --join=10.0.0.1\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"key-configuration-parameters",children:"Key Configuration Parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Example"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--server"})}),(0,i.jsx)(n.td,{children:"Run in server mode"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--server"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--bootstrap-expect"})}),(0,i.jsx)(n.td,{children:"Expected number of servers"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--bootstrap-expect=3"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--node-name"})}),(0,i.jsx)(n.td,{children:"Unique node identifier"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--node-name=node1"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--bind"})}),(0,i.jsx)(n.td,{children:"Address to bind network services"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--bind=10.0.0.1"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--advertise"})}),(0,i.jsx)(n.td,{children:"Address to advertise to cluster"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--advertise=10.0.0.1"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--join"})}),(0,i.jsx)(n.td,{children:"Address of another node to join"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--join=10.0.0.1"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--retry-join"})}),(0,i.jsx)(n.td,{children:"Auto-retry joining"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--retry-join=10.0.0.1"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--tag"})}),(0,i.jsx)(n.td,{children:"Node tag for job targeting"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"--tag role=web"})})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"multi-datacenter-configuration",children:"Multi-Datacenter Configuration"}),"\n",(0,i.jsx)(n.p,{children:"Dkron can run in HA mode, avoiding SPOFs, this mode provides better scalability and better reliability for users that wants a high level of confidence in the cron jobs they need to run."}),"\n",(0,i.jsx)(n.p,{children:"Manually bootstrapping a Dkron cluster does not rely on additional tooling, but does require operator participation in the cluster formation process. When bootstrapping, Dkron servers and clients must be started and informed with the address of at least one Dkron server."}),"\n",(0,i.jsx)(n.p,{children:"As you can tell, this creates a chicken-and-egg problem where one server must first be fully bootstrapped and configured before the remaining servers and clients can join the cluster. This requirement can add additional provisioning time as well as ordered dependencies during provisioning."}),"\n",(0,i.jsx)(n.p,{children:"First, we bootstrap a single Dkron server and capture its IP address. After we have that nodes IP address, we place this address in the configuration."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"First bootstrap a node with a configuration like this:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# dkron.yml\nserver: true\nbootstrap-expect: 1\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Then stop the bootstrapped server and capture the server IP address."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"To form a cluster, configure server nodes (including the bootstrapped server) with the address of its peers as in the following example:"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# dkron.yml\nserver: true\nbootstrap-expect: 3\nretry-join:\n- 10.19.3.9\n- 10.19.4.64\n- 10.19.7.215\n"})}),"\n",(0,i.jsx)(n.h2,{id:"deployment-table",children:"Deployment Table"}),"\n",(0,i.jsxs)(n.p,{children:["Below is a table that shows quorum size and failure tolerance for various\ncluster sizes. The recommended deployment is either 3 or 5 servers. A single\nserver deployment is ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"highly"})})," discouraged as data loss is inevitable in a\nfailure scenario."]}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"Servers"}),(0,i.jsx)("th",{children:"Quorum Size"}),(0,i.jsx)("th",{children:"Failure Tolerance"})]})}),(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"1"}),(0,i.jsx)("td",{children:"1"}),(0,i.jsx)("td",{children:"0"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"2"}),(0,i.jsx)("td",{children:"2"}),(0,i.jsx)("td",{children:"0"})]}),(0,i.jsxs)("tr",{class:"warning",children:[(0,i.jsx)("td",{children:"3"}),(0,i.jsx)("td",{children:"2"}),(0,i.jsx)("td",{children:"1"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"4"}),(0,i.jsx)("td",{children:"3"}),(0,i.jsx)("td",{children:"1"})]}),(0,i.jsxs)("tr",{class:"warning",children:[(0,i.jsx)("td",{children:"5"}),(0,i.jsx)("td",{children:"3"}),(0,i.jsx)("td",{children:"2"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"6"}),(0,i.jsx)("td",{children:"4"}),(0,i.jsx)("td",{children:"2"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"7"}),(0,i.jsx)("td",{children:"4"}),(0,i.jsx)("td",{children:"3"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"fault-tolerance-and-recovery",children:"Fault Tolerance and Recovery"}),"\n",(0,i.jsx)(n.p,{children:"Dkron's distributed architecture is designed to maintain operation even when nodes fail."}),"\n",(0,i.jsx)(n.h3,{id:"leader-failure-recovery",children:"Leader Failure Recovery"}),"\n",(0,i.jsx)(n.p,{children:"When a leader node fails:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Remaining server nodes detect the failure through gossip protocol"}),"\n",(0,i.jsx)(n.li,{children:"A new leader election is automatically triggered"}),"\n",(0,i.jsx)(n.li,{children:"A new leader is elected from the available server nodes"}),"\n",(0,i.jsx)(n.li,{children:"The new leader takes over scheduling responsibilities"}),"\n",(0,i.jsx)(n.li,{children:"All running jobs continue to operate without interruption"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"quorum-requirements",children:"Quorum Requirements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A cluster must maintain a quorum (majority) of server nodes to operate"}),"\n",(0,i.jsx)(n.li,{children:"For a cluster of size N, at least (N/2)+1 nodes must be available"}),"\n",(0,i.jsx)(n.li,{children:"If quorum is lost, the cluster stops scheduling new jobs until quorum is restored"}),"\n",(0,i.jsx)(n.li,{children:"Refer to the Deployment Table above for specific quorum sizes and failure tolerance"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"node-rejoining",children:"Node Rejoining"}),"\n",(0,i.jsx)(n.p,{children:"When a previously failed node rejoins the cluster:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"The node establishes connection with existing cluster members"}),"\n",(0,i.jsx)(n.li,{children:"It synchronizes its state with the current leader"}),"\n",(0,i.jsx)(n.li,{children:"If it was previously a leader, it joins as a follower"}),"\n",(0,i.jsx)(n.li,{children:"The node becomes available for job execution"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"data-recovery",children:"Data Recovery"}),"\n",(0,i.jsx)(n.p,{children:"In case of catastrophic failure:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Restore from backup if available"}),"\n",(0,i.jsx)(n.li,{children:"Bootstrap a new cluster with at least one server node"}),"\n",(0,i.jsx)(n.li,{children:"Import job definitions via API"}),"\n",(0,i.jsx)(n.li,{children:"New executions will begin according to schedule"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"cluster-maintenance",children:"Cluster Maintenance"}),"\n",(0,i.jsx)(n.p,{children:"Proper maintenance ensures your Dkron cluster remains healthy and performant."}),"\n",(0,i.jsx)(n.h3,{id:"adding-nodes",children:"Adding Nodes"}),"\n",(0,i.jsx)(n.p,{children:"To add a new server node to an existing cluster:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Install Dkron on the new server"}),"\n",(0,i.jsx)(n.li,{children:"Configure with appropriate server settings"}),"\n",(0,i.jsxs)(n.li,{children:["Set ",(0,i.jsx)(n.code,{children:"--join"})," parameter to point to existing cluster members"]}),"\n",(0,i.jsx)(n.li,{children:"Start the Dkron process"}),"\n",(0,i.jsx)(n.li,{children:"Verify the node joins successfully via the web UI or API"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Adding agent nodes follows the same process but without the ",(0,i.jsx)(n.code,{children:"--server"})," flag."]}),"\n",(0,i.jsx)(n.h3,{id:"removing-nodes",children:"Removing Nodes"}),"\n",(0,i.jsx)(n.p,{children:"To gracefully remove a node:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"For agents: simply stop the Dkron service"}),"\n",(0,i.jsxs)(n.li,{children:["For server nodes:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If possible, demote the node to an agent first"}),"\n",(0,i.jsx)(n.li,{children:"Ensure you maintain sufficient servers for quorum"}),"\n",(0,i.jsx)(n.li,{children:"Stop the Dkron service"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"upgrading-dkron",children:"Upgrading Dkron"}),"\n",(0,i.jsx)(n.p,{children:"For minimal disruption during upgrades:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Rolling Upgrade"})," (recommended):"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Upgrade one node at a time"}),"\n",(0,i.jsx)(n.li,{children:"Start with agent nodes"}),"\n",(0,i.jsx)(n.li,{children:"Then upgrade server nodes, leaving the leader for last"}),"\n",(0,i.jsx)(n.li,{children:"Allow state synchronization between each node upgrade"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Version Compatibility"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Check release notes for compatibility information"}),"\n",(0,i.jsx)(n.li,{children:"Ensure all nodes in a cluster run compatible versions"}),"\n",(0,i.jsx)(n.li,{children:"Some upgrades may require special procedures"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"monitoring-cluster-health",children:"Monitoring Cluster Health"}),"\n",(0,i.jsx)(n.p,{children:"Regular health checks should include:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Node Status"}),": Check that all expected nodes are active"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Leadership"}),": Verify leader election is stable"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Job Execution"}),": Monitor successful job execution rates"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Resource Usage"}),": Track CPU, memory, and disk usage"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Log Analysis"}),": Review logs for errors or warnings"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"backup-and-recovery",children:"Backup and Recovery"}),"\n",(0,i.jsx)(n.p,{children:"Implement a regular backup strategy:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Data Store Backup"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Stop Dkron service or use backup-friendly commands"}),"\n",(0,i.jsx)(n.li,{children:"Copy the data directory to a secure location"}),"\n",(0,i.jsx)(n.li,{children:"Restart the service if stopped"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Configuration Backup"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Maintain copies of configuration files"}),"\n",(0,i.jsx)(n.li,{children:"Document any custom settings"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Job Definition Export"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use the API to export job definitions"}),"\n",(0,i.jsx)(n.li,{children:"Store in version control for tracking changes"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>d,a:()=>l});var i=r(67294);const s={},t=i.createContext(s);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);