"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3081],{59349:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>a});var i=r(85893),s=r(11151);const t={description:"Dkron supports automatic cluster joining using cloud metadata on various providers."},o="Cloud Auto-join",c={id:"usage/cloud-auto-join",title:"Cloud Auto-join",description:"Dkron supports automatic cluster joining using cloud metadata on various providers.",source:"@site/docs/usage/cloud-auto-join.md",sourceDirName:"usage",slug:"/usage/cloud-auto-join",permalink:"/docs/usage/cloud-auto-join",draft:!1,unlisted:!1,editUrl:"https://github.com/distribworks/dkron/tree/main/website/docs/docs/usage/cloud-auto-join.md",tags:[],version:"current",frontMatter:{description:"Dkron supports automatic cluster joining using cloud metadata on various providers."},sidebar:"tutorialSidebar",previous:{title:"Job chaining",permalink:"/docs/usage/chaining"},next:{title:"Clustering",permalink:"/docs/usage/clustering"}},d={},a=[{value:"Amazon EC2",id:"amazon-ec2",level:3},{value:"Authentication &amp; Precedence",id:"authentication--precedence",level:4},{value:"Microsoft Azure",id:"microsoft-azure",level:3},{value:"Google Compute Engine",id:"google-compute-engine",level:3},{value:"Authentication &amp; Precedence",id:"authentication--precedence-1",level:4},{value:"IBM SoftLayer",id:"ibm-softlayer",level:3},{value:"Aliyun (Alibaba Cloud)",id:"aliyun-alibaba-cloud",level:3},{value:"Digital Ocean",id:"digital-ocean",level:3},{value:"Openstack",id:"openstack",level:3},{value:"Scaleway",id:"scaleway",level:3},{value:"Joyent Triton",id:"joyent-triton",level:3},{value:"vSphere",id:"vsphere",level:3},{value:"Packet",id:"packet",level:3},{value:"Kubernetes (k8s)",id:"kubernetes-k8s",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"cloud-auto-join",children:"Cloud Auto-join"})}),"\n",(0,i.jsxs)(n.p,{children:["As of Dkron 2.0.0, ",(0,i.jsx)(n.code,{children:"retry-join"})," accepts a unified interface using the\n",(0,i.jsx)(n.a,{href:"https://github.com/hashicorp/go-discover",children:"go-discover"})," library for doing\nautomatic cluster joining using cloud metadata. To use retry-join with a\nsupported cloud provider, specify the configuration on the command line or\nconfiguration file as a ",(0,i.jsx)(n.code,{children:"key=value key=value ..."})," string."]}),"\n",(0,i.jsx)(n.p,{children:"If the values contain spaces, equals, backslashes or double quotes then\nthey need to be double quoted and the usual escaping rules apply."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"$ dkron agent --retry-join 'provider=my-cloud config=val config2=\"some other val\" ...'\n"})}),"\n",(0,i.jsx)(n.p,{children:"or via a configuration file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:'retry-join": ["provider=my-cloud config=val config2=\\"some other val\\" ..."]\n'})}),"\n",(0,i.jsx)(n.p,{children:"The cloud provider-specific configurations are detailed below. This can be\ncombined with static IP or DNS addresses or even multiple configurations\nfor different providers."}),"\n",(0,i.jsxs)(n.p,{children:["In order to use discovery behind a proxy, you will need to set\n",(0,i.jsx)(n.code,{children:"HTTP_PROXY"}),", ",(0,i.jsx)(n.code,{children:"HTTPS_PROXY"})," and ",(0,i.jsx)(n.code,{children:"NO_PROXY"})," environment variables per\n",(0,i.jsxs)(n.a,{href:"https://golang.org/pkg/net/http/#ProxyFromEnvironment",children:["Golang ",(0,i.jsx)(n.code,{children:"net/http"})," library"]}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The following sections give the options specific to each supported cloud\nprovider."}),"\n",(0,i.jsx)(n.h3,{id:"amazon-ec2",children:"Amazon EC2"}),"\n",(0,i.jsxs)(n.p,{children:["This returns the first private IP address of all servers in the given\nregion which have the given ",(0,i.jsx)(n.code,{children:"tag_key"})," and ",(0,i.jsx)(n.code,{children:"tag_value"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'$ dkron agent --retry-join "provider=aws tag_key=... tag_value=..."\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:'retry-join: ["provider=aws tag_key=... tag_value=..."]\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"provider"}),' (required) - the name of the provider ("aws" in this case).']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tag_key"})," (required) - the key of the tag to auto-join on."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tag_value"})," (required) - the value of the tag to auto-join on."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"region"})," (optional) - the AWS region to authenticate in."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"addr_type"})," (optional) - the type of address to discover: ",(0,i.jsx)(n.code,{children:"private_v4"}),", ",(0,i.jsx)(n.code,{children:"public_v4"}),", ",(0,i.jsx)(n.code,{children:"public_v6"}),". Default is ",(0,i.jsx)(n.code,{children:"private_v4"}),". (>= 1.0)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"access_key_id"})," (optional) - the AWS access key for authentication (see below for more information about authenticating)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"secret_access_key"})," (optional) - the AWS secret access key for authentication (see below for more information about authenticating)."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"authentication--precedence",children:"Authentication & Precedence"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Static credentials ",(0,i.jsx)(n.code,{children:"access_key_id=... secret_access_key=..."})]}),"\n",(0,i.jsxs)(n.li,{children:["Environment variables (",(0,i.jsx)(n.code,{children:"AWS_ACCESS_KEY_ID"})," and ",(0,i.jsx)(n.code,{children:"AWS_SECRET_ACCESS_KEY"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Shared credentials file (",(0,i.jsx)(n.code,{children:"~/.aws/credentials"})," or the path specified by ",(0,i.jsx)(n.code,{children:"AWS_SHARED_CREDENTIALS_FILE"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"ECS task role metadata (container-specific)."}),"\n",(0,i.jsx)(n.li,{children:"EC2 instance role metadata."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The only required IAM permission is ",(0,i.jsx)(n.code,{children:"ec2:DescribeInstances"}),", and it is\nrecommended that you make a dedicated key used only for auto-joining. If the\nregion is omitted it will be discovered through the local instance's ",(0,i.jsx)(n.a,{href:"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-identity-documents.html",children:"EC2\nmetadata\nendpoint"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"microsoft-azure",children:"Microsoft Azure"}),"\n",(0,i.jsxs)(n.p,{children:["This returns the first private IP address of all servers in the given region\nwhich have the given ",(0,i.jsx)(n.code,{children:"tag_key"})," and ",(0,i.jsx)(n.code,{children:"tag_value"})," in the tenant and subscription, or in\nthe given ",(0,i.jsx)(n.code,{children:"resource_group"})," of a ",(0,i.jsx)(n.code,{children:"vm_scale_set"})," for Virtual Machine Scale Sets."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'$ dkron agent --retry-join "provider=azure tag_name=... tag_value=... tenant_id=... client_id=... subscription_id=... secret_access_key=..."\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:'retry-join: ["provider=azure tag_name=... tag_value=... tenant_id=... client_id=... subscription_id=... secret_access_key=..."]\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"provider"}),' (required) - the name of the provider ("azure" in this case).']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tenant_id"})," (required) - the tenant to join machines in."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"client_id"})," (required) - the client to authenticate with."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"secret_access_key"})," (required) - the secret client key. ",(0,i.jsx)(n.strong,{children:"NOTE"})," This value often may have an equals sign in it's value, especially if generated from the Azure Portal, so is important to wrap in single quotes eg. ",(0,i.jsx)(n.code,{children:"secret_acccess_key='fpOfcHQJAQBczjAxiVpeyLmX1M0M0KPBST+GU2GvEN4='"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Variables can also be provided by environmental variables:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ARM_SUBSCRIPTION_ID"})," for subscription"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ARM_TENANT_ID"})," for tenant"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ARM_CLIENT_ID"})," for client"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ARM_CLIENT_SECRET"})," for secret access key"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Use these configuration parameters when using tags:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tag_name"})," - the name of the tag to auto-join on."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tag_value"})," - the value of the tag to auto-join on."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Use these configuration parameters (instead of ",(0,i.jsx)(n.code,{children:"tag_name"})," and ",(0,i.jsx)(n.code,{children:"tag_value"}),") when using Virtual Machine Scale Sets (Dkron 1.0.3 and later):"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"resource_group"})," - the name of the resource group to filter on."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"vm_scale_set"})," - the name of the virtual machine scale set to filter on."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["When using tags the only permission needed is ",(0,i.jsx)(n.code,{children:"Microsoft.Network/networkInterfaces"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["When using Virtual Machine Scale Sets the only role action needed is ",(0,i.jsx)(n.code,{children:"Microsoft.Compute/virtualMachineScaleSets/*/read"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"google-compute-engine",children:"Google Compute Engine"}),"\n",(0,i.jsxs)(n.p,{children:["This returns the first private IP address of all servers in the given\nproject which have the given ",(0,i.jsx)(n.code,{children:"tag_value"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'$ dkron agent --retry-join "provider=gce project_name=... tag_value=..."\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:'retry_join: ["provider=gce project_name=... tag_value=..."]\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"provider"}),' (required) - the name of the provider ("gce" in this case).']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tag_value"})," (required) - the value of the tag to auto-join on."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"project_name"})," (optional) - the name of the project to auto-join on. Discovered if not set."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"zone_pattern"})," (optional) - the list of zones can be restricted through an RE2 compatible regular expression. If omitted, servers in all zones are returned."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"credentials_file"})," (optional) - the credentials file for authentication. Note, if you set ",(0,i.jsx)(n.code,{children:"-config-dir"})," do not store the credentials.json file in the configuration directory as it will be parsed as a config file and Dkron will fail to start. See below for more information."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"authentication--precedence-1",children:"Authentication & Precedence"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use credentials from ",(0,i.jsx)(n.code,{children:"credentials_file"}),", if provided."]}),"\n",(0,i.jsxs)(n.li,{children:["Use JSON file from ",(0,i.jsx)(n.code,{children:"GOOGLE_APPLICATION_CREDENTIALS"})," environment variable."]}),"\n",(0,i.jsxs)(n.li,{children:["Use JSON file in a location known to the gcloud command-line tool.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On Windows, this is ",(0,i.jsx)(n.code,{children:"%APPDATA%/gcloud/application_default_credentials.json"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["On other systems, ",(0,i.jsx)(n.code,{children:"$HOME/.config/gcloud/application_default_credentials.json"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"On Google Compute Engine, use credentials from the metadata\nserver. In this final case any provided scopes are ignored."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Discovery requires a ",(0,i.jsx)(n.a,{href:"https://cloud.google.com/compute/docs/access/service-accounts",children:"GCE Service\nAccount"}),".\nCredentials are searched using the following paths, in order of precedence."]}),"\n",(0,i.jsx)(n.h3,{id:"ibm-softlayer",children:"IBM SoftLayer"}),"\n",(0,i.jsxs)(n.p,{children:["This returns the first private IP address of all servers for the given\ndatacenter with the given ",(0,i.jsx)(n.code,{children:"tag_value"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'$ dkron agent --retry-join "provider=softlayer datacenter=... tag_value=... username=... api_key=..."\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:'retry-join: ["provider=softlayer datacenter=... tag_value=... username=... api_key=..."]\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"provider"}),' (required) - the name of the provider ("softlayer" in this case).']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)("a",{name:"sl_datacenter"}),(0,i.jsx)("a",{href:"#sl_datacenter",children:(0,i.jsx)("code",{children:"datacenter"})})," (required) - the name of the datacenter to auto-join in."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tag_value"})," (required) - the value of the tag to auto-join on."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"username"})," (required) - the username to use for auth."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"api_key"})," (required) - the api key to use for auth."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"aliyun-alibaba-cloud",children:"Aliyun (Alibaba Cloud)"}),"\n",(0,i.jsxs)(n.p,{children:["This returns the first private IP address of all servers for the given\n",(0,i.jsx)(n.code,{children:"region"})," with the given ",(0,i.jsx)(n.code,{children:"tag_key"})," and ",(0,i.jsx)(n.code,{children:"tag_value"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'$ dkron agent --retry-join "provider=aliyun region=... tag_key=dkron tag_value=... access_key_id=... access_key_secret=..."\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:'retry-join: ["provider=aliyun region=... tag_key=dkron tag_value=... access_key_id=... access_key_secret=..."]\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"provider"}),' (required) - the name of the provider ("aliyun" in this case).']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"region"})," (required) - the name of the region."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tag_key"})," (required) - the key of the tag to auto-join on."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tag_value"})," (required) - the value of the tag to auto-join on."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"access_key_id"})," (required) -the access key to use for auth."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"access_key_secret"})," (required) - the secret key to use for auth."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The required RAM permission is ",(0,i.jsx)(n.code,{children:"ecs:DescribeInstances"}),".\nIt is recommended you make a dedicated key used only for auto-joining."]}),"\n",(0,i.jsx)(n.h3,{id:"digital-ocean",children:"Digital Ocean"}),"\n",(0,i.jsxs)(n.p,{children:["This returns the first private IP address of all servers for the given\n",(0,i.jsx)(n.code,{children:"region"})," with the given ",(0,i.jsx)(n.code,{children:"tag_name"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'$ dkron agent --retry-join "provider=digitalocean region=... tag_name=... api_token=..."\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:'retry-join: ["provider=digitalocean region=... tag_name=... api_token=..."]\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"provider"}),' (required) - the name of the provider ("digitalocean" in this case).']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"region"})," (required) - the name of the region."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tag_name"})," (required) - the value of the tag to auto-join on."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"api_token"})," (required) -the token to use for auth."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"openstack",children:"Openstack"}),"\n",(0,i.jsxs)(n.p,{children:["This returns the first private IP address of all servers for the given\n",(0,i.jsx)(n.code,{children:"region"})," with the given ",(0,i.jsx)(n.code,{children:"tag_key"})," and ",(0,i.jsx)(n.code,{children:"tag_value"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'$ dkron agent --retry-join "provider=os tag_key=dkron tag_value=server username=... password=... auth_url=..."\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:'retry-join: ["provider=os tag_key=dkron tag_value=server username=... password=... auth_url=..."]\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"provider"}),' (required) - the name of the provider ("os" in this case).']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tag_key"})," (required) - the key of the tag to auto-join on."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tag_value"})," (required) - the value of the tag to auto-join on."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"project_id"})," (optional) - the id of the project (tenant id)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"username"})," (optional) - the username to use for auth."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"password"})," (optional) - the password to use for auth."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"token"})," (optional) - the token to use for auth."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"auth_url"})," (optional) - the identity endpoint to use for auth."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"insecure"})," (optional) - indicates whether the API certificate should not be checked. Any value means ",(0,i.jsx)(n.code,{children:"true"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The configuration can also be provided by environment variables."}),"\n",(0,i.jsx)(n.h3,{id:"scaleway",children:"Scaleway"}),"\n",(0,i.jsxs)(n.p,{children:["This returns the first private IP address of all servers for the given\n",(0,i.jsx)(n.code,{children:"region"})," with the given ",(0,i.jsx)(n.code,{children:"tag_name"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'$ dkron agent --retry-join "provider=scaleway organization=my-org tag_name=dkron-server token=... region=..."\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:'retry-join: ["provider=scaleway organization=my-org tag_name=dkron-server token=... region=..."]\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"provider"}),' (required) - the name of the provider ("scaleway" in this case).']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"region"})," (required) - the name of the region."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tag_name"})," (required) - the name of the tag to auto-join on."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"organization"})," (required) - the organization access key to use for auth (equal to access key)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"token"})," (required) - the token to use for auth."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"joyent-triton",children:"Joyent Triton"}),"\n",(0,i.jsxs)(n.p,{children:["This returns the first PrimaryIP addresses for all servers with the given ",(0,i.jsx)(n.code,{children:"tag_key"})," and ",(0,i.jsx)(n.code,{children:"tag_value"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'$ dkron agent --retry-join "provider=triton account=testaccount url=https://us-sw-1.api.joyentcloud.com key_id=... tag_key=dkron-role tag_value=server"\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:'retry-join: ["provider=triton account=testaccount url=https://us-sw-1.api.joyentcloud.com key_id=... tag_key=dkron-role tag_value=server"]\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"provider"}),' (required) - the name of the provider ("triton" in this case).']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"account"})," (required) - the name of the account."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"url"})," (required) - the URL of the Triton api endpoint to use."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"key_id"})," (required) - the key id to use."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tag_key"})," (optional) - the instance tag key to use."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tag_value"})," (optional) - the tag value to use."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"vsphere",children:"vSphere"}),"\n",(0,i.jsxs)(n.p,{children:["This returns the first private IP address of all servers for the given region with the given ",(0,i.jsx)(n.code,{children:"tag_name"})," and ",(0,i.jsx)(n.code,{children:"category_name"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'$ dkron agent --retry-join "provider=vsphere category_name=dkron-role tag_name=dkron-server host=... user=... password=... insecure_ssl=[true|false]"\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:'retry-join: ["provider=vsphere category_name=dkron-role tag_name=dkron-server host=... user=... password=... insecure_ssl=[true|false]"]\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"provider"}),' (required) -   the name of the provider ("vsphere" is the provider here)']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tag_name"})," (required) -    The name of the tag to look up."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"category_name"})," (required) - The category of the tag to look up."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"host"})," (required) -        The host of the vSphere server to connect to."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"user"})," (required) -         The username to connect as."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"password"})," (required) -     The password of the user to connect to vSphere as."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"insecure_ssl"})," (optional) -  Whether or not to skip SSL certificate validation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"timeout"})," (optional) -     Discovery context timeout (default: 10m)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"packet",children:"Packet"}),"\n",(0,i.jsxs)(n.p,{children:["This returns the first private IP address (or the IP address of ",(0,i.jsx)(n.code,{children:"address type"}),") of all servers with the given ",(0,i.jsx)(n.code,{children:"project"})," and ",(0,i.jsx)(n.code,{children:"auth_token"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'$ dkron agent --retry-join "provider=packet auth_token=token project=uuid url=... address_type=..."\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:'retry-join: ["provider=packet auth_token=token project=uuid url=... address_type=..."]\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"provider"}),' (required)\t-\tthe name of the provider ("packet" is the provider here)']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"project"})," (required) \t- \tthe UUID of packet project"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"auth_token"})," (required) -  the authentication token for packet"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"url"})," (optional) - \t\t a REST URL for packet"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"address_type"}),' (optional) - the type of address to check for in this provider  ("private_v4", "public_v4" or "public_v6".                                   Defaults to "private_v4")']}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"kubernetes-k8s",children:"Kubernetes (k8s)"}),"\n",(0,i.jsxs)(n.p,{children:["The Kubernetes provider finds the IP addresses of pods with the matching\n",(0,i.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",children:"label or field selector"}),".\nThis is useful for non-Kubernetes agents that are joining a server cluster\nrunning within Kubernetes."]}),"\n",(0,i.jsxs)(n.p,{children:["The pod IP is used by default, which requires that the agent connecting can\nnetwork to the pod IP. The ",(0,i.jsx)(n.code,{children:"host_network"})," boolean can be set to true to use\nthe host IP instead, but this requires the agent ports (Gossip, RPC, etc.)\nto be exported to the host as well."]}),"\n",(0,i.jsxs)(n.p,{children:["By default, no port is specified. This causes Dkron to use the default\ngossip port (default behavior with all join requests). The pod may specify\nthe ",(0,i.jsx)(n.code,{children:"dkron.hashicorp.com/auto-join-port"})," annotation to set the port. The value\nmay be an integer or a named port."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'$ dkron agent --retry-join "provider=k8s label_selector=\\"app=dkron,component=server\\""\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:'retry-join: ["provider=k8s label_selector=..."]\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"provider"}),' (required)\t-\tthe name of the provider ("k8s" is the provider here)']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"kubeconfig"})," (optional) \t- \tpath to the kubeconfig file. If this isn't\nset, then in-cluster auth will be attempted. If that fails, the default\nkubeconfig paths are tried (",(0,i.jsx)(n.code,{children:"$HOME/.kube/config"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"namespace"})," (optional) -  the namespace to search for pods. If this isn't\nset, it defaults to all namespaces."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"label_selector"})," (optional) - the label selector for matching pods."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"field_selector"})," (optional) - the field selector for matching pods."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>o});var i=r(67294);const s={},t=i.createContext(s);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);