"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3595],{98641:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>a});var o=r(85893),n=r(11151);const s={title:"Upgrade methods"},l=void 0,i={id:"usage/upgrade",title:"Upgrade methods",description:"Use one of the following methods (depending on the changes) to upgrade a cluster to a newer version.",source:"@site/versioned_docs/version-v3/usage/upgrade.md",sourceDirName:"usage",slug:"/usage/upgrade",permalink:"/docs/v3/usage/upgrade",draft:!1,unlisted:!1,editUrl:"https://github.com/distribworks/dkron/tree/main/website/docs/versioned_docs/version-v3/usage/upgrade.md",tags:[],version:"v3",frontMatter:{title:"Upgrade methods"},sidebar:"tutorialSidebar",previous:{title:"Target nodes spec",permalink:"/docs/v3/usage/target-nodes-spec"},next:{title:"dkron",permalink:"/docs/v3/cli/dkron"}},d={},a=[{value:"Rolling upgrade",id:"rolling-upgrade",level:3},{value:"Backup &amp; Restore",id:"backup--restore",level:3}];function c(e){const t={code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,n.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Use one of the following methods (depending on the changes) to upgrade a cluster to a newer version."}),"\n",(0,o.jsx)(t.h3,{id:"rolling-upgrade",children:"Rolling upgrade"}),"\n",(0,o.jsx)(t.p,{children:"Use the following procedure to rotate all cluster nodes, one server at a time:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"Add a new server to the cluster with a configuration that joins them to the existing cluster."}),"\n",(0,o.jsx)(t.li,{children:"Stop dkron service on one of the old servers, if it was the leader allow a new leader to be elected. Note that it is better to remove the current leader at the end, to ensure a leader is elected from the new nodes."}),"\n",(0,o.jsxs)(t.li,{children:["Use ",(0,o.jsx)(t.code,{children:"dkron raft list-peers"})," to list current cluster nodes."]}),"\n",(0,o.jsxs)(t.li,{children:["Use ",(0,o.jsx)(t.code,{children:"dkron raft remove-peer"})," to forcefully remove the old server."]}),"\n",(0,o.jsx)(t.li,{children:"Repeat steps above until all old cluster nodes have been upgraded."}),"\n"]}),"\n",(0,o.jsx)(t.h3,{id:"backup--restore",children:"Backup & Restore"}),"\n",(0,o.jsxs)(t.p,{children:["Use the ",(0,o.jsx)(t.code,{children:"/restore"})," API endpoint to restore a previously exported jobs file"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"curl localhost:8080/v1/jobs > backup.json\ncurl localhost:8080/v1/restore --form 'file=@backup.json'\n"})}),"\n",(0,o.jsx)(t.p,{children:"This will restore all jobs and counters as they were in the export file."})]})}function u(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},11151:(e,t,r)=>{r.d(t,{Z:()=>i,a:()=>l});var o=r(67294);const n={},s=o.createContext(n);function l(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);