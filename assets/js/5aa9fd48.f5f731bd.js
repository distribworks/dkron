"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1524],{30496:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var o=t(17624),s=t(4552);const a={title:"Target nodes spec",weight:10},i=void 0,r={id:"usage/target-nodes-spec",title:"Target nodes spec",description:"Target nodes spec",source:"@site/versioned_docs/version-v3/usage/target-nodes-spec.md",sourceDirName:"usage",slug:"/usage/target-nodes-spec",permalink:"/docs/v3/usage/target-nodes-spec",draft:!1,unlisted:!1,editUrl:"https://github.com/distribworks/dkron/tree/main/website/docs/versioned_docs/version-v3/usage/target-nodes-spec.md",tags:[],version:"v3",frontMatter:{title:"Target nodes spec",weight:10},sidebar:"tutorialSidebar",previous:{title:"Embedded storage",permalink:"/docs/v3/usage/storage"},next:{title:"Upgrade methods",permalink:"/docs/v3/usage/upgrade"}},d={},l=[{value:"Target nodes spec",id:"target-nodes-spec",level:2},{value:"Target all nodes with a tag",id:"target-all-nodes-with-a-tag",level:4},{value:"Target only one nodes of a group of nodes with a tag",id:"target-only-one-nodes-of-a-group-of-nodes-with-a-tag",level:4},{value:"Details and limitations",id:"details-and-limitations",level:3},{value:"Reserved tags",id:"reserved-tags",level:4},{value:"Combinations",id:"combinations",level:4},{value:"Tags Limit",id:"tags-limit",level:4}];function c(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",...(0,s.M)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"target-nodes-spec",children:"Target nodes spec"}),"\n",(0,o.jsx)(n.p,{children:"Default is for all nodes to execute each job. Dkron has the ability to run jobs in specific nodes by leveraging the use of tags. You can choose whether a job is run on a node or group of nodes by specifying tags and a count of target nodes having this tag do you want a job to run."}),"\n",(0,o.jsx)(n.p,{children:"The target node syntax is:"}),"\n",(0,o.jsxs)(n.p,{children:['"tag": "value[',":count",']"']}),"\n",(0,o.jsx)(n.p,{children:"To achieve this Nodes and Jobs have tags, for example, having a node with the following tags:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n    "tags": {\n        "dc": "dc1",\n        "expect": "3",\n        "port": "6868",\n        "region": "global",\n        "role": "dkron",\n        "rpc_addr": "10.88.94.129:6868",\n        "server": "true",\n        "version": "devel",\n        "my_role": "web"\n    }\n}\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["You can specify tags for nodes in the dkron config file or in the command line using ",(0,o.jsx)(n.code,{children:"--tags"})," parameter"]})}),"\n",(0,o.jsx)(n.p,{children:"In case there is no matching nodes with the specified tags, the job will not run."}),"\n",(0,o.jsx)(n.p,{children:"Following some examples using different tag combinations:"}),"\n",(0,o.jsx)(n.h4,{id:"target-all-nodes-with-a-tag",children:"Target all nodes with a tag"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n    "name": "job_name",\n    "command": "/bin/true",\n    "schedule": "@every 2m",\n    "tags": {\n        "my_role": "web"\n    }\n}\n'})}),"\n",(0,o.jsx)(n.mermaid,{value:'graph LR;\n    J("Job tags: #quot;my_role#quot;: #quot;web#quot;") --\x3e|Run Job|N1["Node1 tags: #quot;my_role#quot;: #quot;web#quot;"]\n    J --\x3e|Run Job|N2["Node2 tags: #quot;my_role#quot;: #quot;web#quot;"]\n    J --\x3e|Run Job|N3["Node2 tags: #quot;my_role#quot;: #quot;web#quot;"]'}),"\n",(0,o.jsx)(n.h4,{id:"target-only-one-nodes-of-a-group-of-nodes-with-a-tag",children:"Target only one nodes of a group of nodes with a tag"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n    "name": "job_name",\n    "command": "/bin/true",\n    "schedule": "@every 2m",\n    "tags": {\n        "my_role": "web:1"\n    }\n}\n'})}),"\n",(0,o.jsx)(n.mermaid,{value:'graph LR;\n    J("Job tags: #quot;my_role#quot;: #quot;web:1#quot;") --\x3e|Run Job|N1["Node1 tags: #quot;my_role#quot;: #quot;web#quot;"]\n    J -.- N2["Node2 tags: #quot;my_role#quot;: #quot;web#quot;"]\n    J -.- N3["Node2 tags: #quot;my_role#quot;: #quot;web#quot;"]'}),"\n",(0,o.jsx)(n.p,{children:"Dkron will try to run the job in the amount of nodes indicated by that count having that tag."}),"\n",(0,o.jsx)(n.h3,{id:"details-and-limitations",children:"Details and limitations"}),"\n",(0,o.jsx)(n.h4,{id:"reserved-tags",children:"Reserved tags"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"region"})," tag is reserved for multi-region setup purposes and should not be used for any other purpose."]}),"\n",(0,o.jsx)(n.p,{children:"Dkron will always run jobs in nodes with the same region tag."}),"\n",(0,o.jsx)(n.p,{children:"You should use an alternative name."}),"\n",(0,o.jsx)(n.h4,{id:"combinations",children:"Combinations"}),"\n",(0,o.jsxs)(n.p,{children:["Tags specified in a Job are combined using ",(0,o.jsx)(n.code,{children:"AND"}),", therefore a job that specifies several tags like:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n    "tags": {\n        "my_role": "web",\n        "role": "dkron"\n    }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"Will try to run the job in nodes that have all speciefied tags."}),"\n",(0,o.jsx)(n.h4,{id:"tags-limit",children:"Tags Limit"}),"\n",(0,o.jsx)(n.p,{children:"There is no limit in the tags that a job can have but having a Job with several tags with count like:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n    "tags": {\n        "my_role": "web:1",\n        "role": "dkron:2"\n    }\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Will try to run the job in nodes that have all specified tags and using the lowest count. In the last example, it will run in ",(0,o.jsx)(n.strong,{children:"one"})," node having ",(0,o.jsx)(n.code,{children:'"my_role": "web"'})," and ",(0,o.jsx)(n.code,{children:'"role": "dkron"'})," tag, even if there is more than one node with these tags."]})]})}function g(e={}){const{wrapper:n}={...(0,s.M)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},4552:(e,n,t)=>{t.d(n,{I:()=>r,M:()=>i});var o=t(11504);const s={},a=o.createContext(s);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);