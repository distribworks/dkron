"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[478],{78046:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var s=n(85893),i=n(11151);const o={title:"Internals"},r=void 0,a={id:"usage/internals",title:"Internals",description:"This document is a WIP, it's intended to describe the reasons that lead to design decisions in Dkron.",source:"@site/versioned_docs/version-v1/usage/internals.md",sourceDirName:"usage",slug:"/usage/internals",permalink:"/docs/v1/usage/internals",draft:!1,unlisted:!1,editUrl:"https://github.com/distribworks/dkron/tree/main/website/docs/versioned_docs/version-v1/usage/internals.md",tags:[],version:"v1",frontMatter:{title:"Internals"},sidebar:"tutorialSidebar",previous:{title:"shell",permalink:"/docs/v1/usage/executors/shell"},next:{title:"Metrics",permalink:"/docs/v1/usage/metrics"}},c={},d=[{value:"Execution results",id:"execution-results",level:2},{value:"Executions commands output",id:"executions-commands-output",level:2}];function u(e){const t={a:"a",h2:"h2",li:"li",ol:"ol",p:"p",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"This document is a WIP, it's intended to describe the reasons that lead to design decisions in Dkron."}),"\n",(0,s.jsx)(t.h2,{id:"execution-results",children:"Execution results"}),"\n",(0,s.jsx)(t.p,{children:"Dkron store the result of each job execution in each node."}),"\n",(0,s.jsx)(t.p,{children:"Every time dkron executes a job it assigns it an execution group, generating a new uuid and send a serf query to target machines and waits for a response."}),"\n",(0,s.jsx)(t.p,{children:"Each target machine that will run the job, then responds with an execution object saying it started to run the job."}),"\n",(0,s.jsx)(t.p,{children:"This allows dkron to know how many machines will be running the job."}),"\n",(0,s.jsx)(t.p,{children:"The design takes into account the differences of how the different storage backends work."}),"\n",(0,s.jsxs)(t.p,{children:["Due to this issue ",(0,s.jsx)(t.a,{href:"https://github.com/docker/libkv/issues/20",children:"https://github.com/docker/libkv/issues/20"})," executions are grouped using the group id in the execution object."]}),"\n",(0,s.jsx)(t.h2,{id:"executions-commands-output",children:"Executions commands output"}),"\n",(0,s.jsx)(t.p,{children:"When a node has finished executing a job it gathers the output of the executed command and sends it back to the a server using an RPC call. This is designed after two main reasons:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Scallability, in case of thousands of nodes responding to job the responses are sent to dkron servers in an evenly way selecting a random Dkron server of the ones that are available at the moment and send the response. In the future, Dkron should retry sending the command result with an exponential backoff."}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Due to the limitations of Serf the queries payload can't be bigger that 1KB, this renders impossible to send a minimal command output togheter with the execution metadata."}),"\n"]}),"\n"]})]})}function l(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>r});var s=n(67294);const i={},o=s.createContext(i);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);